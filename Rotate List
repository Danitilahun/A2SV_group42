# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if k==0 or not head or not head.next:
            return head
        curr=head
        length=1
        while curr and curr.next:
            curr=curr.next
            length+=1
        if not k%length:
            return head
        k=length-k%length
        dummy=ListNode()
        ind=0
        cur=head
        while cur:
            ind+=1
            if k==ind:
                break
            cur=cur.next
        dummy.next=cur.next
        curr.next=head
        cur.next=None
        return dummy.next
