# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        dummy=ListNode(0,head)
        index=0
        cur=dummy
        left_node=None
        right_node=None
        while cur:
            if left-1==index:
                left_node=cur
            if right==index:
                right_node=cur
            cur=cur.next
            index+=1
        pre=right_node.next
        cur=left_node.next
        for index in range(right-left+1):
            temp=cur.next
            cur.next=pre
            pre=cur
            cur=temp
        left_node.next=pre
        return dummy.next

        
