class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        self.matrix=matrix
        col=len(matrix[0])
        row=len(matrix)
        self.prefix=[[0]*(col+1) for i in range(row+1)]

        for r in range(row):
            for c in range(col):
                self.prefix[r+1][c+1]=self.prefix[r+1][c]+self.prefix[r][c+1] -self.prefix[r][c] +  self.matrix[r][c]
        # print(self.prefix)


    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        required=self.prefix[row2+1][col2+1]
       
        left=self.prefix[row2+1][col1]
        top=self.prefix[row1][col2+1]
        double=self.prefix[row1][col1]
        # print(required,left,top,double)
        return required -left -top + double


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
